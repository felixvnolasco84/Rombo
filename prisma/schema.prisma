// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique 
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String?   
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @updatedAt
  email         String    @unique
  emailVerified DateTime?
  projects      Project[]
  image         String?
  password      String?
  requests      Request[]
  accounts      Account[]
  sessions      Session[]  
}


model VerificationToken {
  identifier String @id @map("_id")
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}



// model Comment {
//   id        String   @id @default(cuid()) @map("_id")
//   createdAt DateTime @default(now())
//   desc      String
//   userEmail String
//   user      User     @relation(fields: [userEmail], references: [email])
//   requestSlug  String
//   request   Request     @relation(fields: [requestSlug], references: [slug])
//   }


  model Request {
    id        String   @id @default(cuid()) @map("_id")
    title     String
    description String
    category String
    attachments String
    projectId String
    userId    String
    user      User    @relation(fields: [userId], references: [id])
    project   Project    @relation(fields: [projectId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  }

  model Category {
    id    String  @id @default(cuid()) @map("_id")
    slug  String  @unique
    title String
    img   String?
  }

  model Project {
    id        String   @id @default(cuid()) @map("_id")    
    Request Request[]
    title     String
    desc      String
    img       String?
    userId  String
    user    User    @relation(fields: [userId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  }